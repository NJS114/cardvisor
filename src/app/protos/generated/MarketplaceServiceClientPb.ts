/**
 * @fileoverview gRPC-Web generated client stub for marketplace
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v6.31.0
// source: marketplace.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as marketplace_pb from './marketplace_pb'; // proto import: "marketplace.proto"


export class MarketplaceServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorPurchaseService = new grpcWeb.MethodDescriptor(
    '/marketplace.MarketplaceService/PurchaseService',
    grpcWeb.MethodType.UNARY,
    marketplace_pb.PurchaseRequest,
    marketplace_pb.PurchaseResponse,
    (request: marketplace_pb.PurchaseRequest) => {
      return request.serializeBinary();
    },
    marketplace_pb.PurchaseResponse.deserializeBinary
  );

  purchaseService(
    request: marketplace_pb.PurchaseRequest,
    metadata?: grpcWeb.Metadata | null): Promise<marketplace_pb.PurchaseResponse>;

  purchaseService(
    request: marketplace_pb.PurchaseRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: marketplace_pb.PurchaseResponse) => void): grpcWeb.ClientReadableStream<marketplace_pb.PurchaseResponse>;

  purchaseService(
    request: marketplace_pb.PurchaseRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: marketplace_pb.PurchaseResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/marketplace.MarketplaceService/PurchaseService',
        request,
        metadata || {},
        this.methodDescriptorPurchaseService,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/marketplace.MarketplaceService/PurchaseService',
    request,
    metadata || {},
    this.methodDescriptorPurchaseService);
  }

  methodDescriptorCreateStripeAccount = new grpcWeb.MethodDescriptor(
    '/marketplace.MarketplaceService/CreateStripeAccount',
    grpcWeb.MethodType.UNARY,
    marketplace_pb.CreateStripeAccountRequest,
    marketplace_pb.CreateStripeAccountReply,
    (request: marketplace_pb.CreateStripeAccountRequest) => {
      return request.serializeBinary();
    },
    marketplace_pb.CreateStripeAccountReply.deserializeBinary
  );

  createStripeAccount(
    request: marketplace_pb.CreateStripeAccountRequest,
    metadata?: grpcWeb.Metadata | null): Promise<marketplace_pb.CreateStripeAccountReply>;

  createStripeAccount(
    request: marketplace_pb.CreateStripeAccountRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: marketplace_pb.CreateStripeAccountReply) => void): grpcWeb.ClientReadableStream<marketplace_pb.CreateStripeAccountReply>;

  createStripeAccount(
    request: marketplace_pb.CreateStripeAccountRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: marketplace_pb.CreateStripeAccountReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/marketplace.MarketplaceService/CreateStripeAccount',
        request,
        metadata || {},
        this.methodDescriptorCreateStripeAccount,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/marketplace.MarketplaceService/CreateStripeAccount',
    request,
    metadata || {},
    this.methodDescriptorCreateStripeAccount);
  }

  methodDescriptorGetStripeAccountStatus = new grpcWeb.MethodDescriptor(
    '/marketplace.MarketplaceService/GetStripeAccountStatus',
    grpcWeb.MethodType.UNARY,
    marketplace_pb.GetStripeAccountStatusRequest,
    marketplace_pb.GetStripeAccountStatusReply,
    (request: marketplace_pb.GetStripeAccountStatusRequest) => {
      return request.serializeBinary();
    },
    marketplace_pb.GetStripeAccountStatusReply.deserializeBinary
  );

  getStripeAccountStatus(
    request: marketplace_pb.GetStripeAccountStatusRequest,
    metadata?: grpcWeb.Metadata | null): Promise<marketplace_pb.GetStripeAccountStatusReply>;

  getStripeAccountStatus(
    request: marketplace_pb.GetStripeAccountStatusRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: marketplace_pb.GetStripeAccountStatusReply) => void): grpcWeb.ClientReadableStream<marketplace_pb.GetStripeAccountStatusReply>;

  getStripeAccountStatus(
    request: marketplace_pb.GetStripeAccountStatusRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: marketplace_pb.GetStripeAccountStatusReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/marketplace.MarketplaceService/GetStripeAccountStatus',
        request,
        metadata || {},
        this.methodDescriptorGetStripeAccountStatus,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/marketplace.MarketplaceService/GetStripeAccountStatus',
    request,
    metadata || {},
    this.methodDescriptorGetStripeAccountStatus);
  }

  methodDescriptorCreatePaymentIntent = new grpcWeb.MethodDescriptor(
    '/marketplace.MarketplaceService/CreatePaymentIntent',
    grpcWeb.MethodType.UNARY,
    marketplace_pb.CreatePaymentIntentRequest,
    marketplace_pb.CreatePaymentIntentReply,
    (request: marketplace_pb.CreatePaymentIntentRequest) => {
      return request.serializeBinary();
    },
    marketplace_pb.CreatePaymentIntentReply.deserializeBinary
  );

  createPaymentIntent(
    request: marketplace_pb.CreatePaymentIntentRequest,
    metadata?: grpcWeb.Metadata | null): Promise<marketplace_pb.CreatePaymentIntentReply>;

  createPaymentIntent(
    request: marketplace_pb.CreatePaymentIntentRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: marketplace_pb.CreatePaymentIntentReply) => void): grpcWeb.ClientReadableStream<marketplace_pb.CreatePaymentIntentReply>;

  createPaymentIntent(
    request: marketplace_pb.CreatePaymentIntentRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: marketplace_pb.CreatePaymentIntentReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/marketplace.MarketplaceService/CreatePaymentIntent',
        request,
        metadata || {},
        this.methodDescriptorCreatePaymentIntent,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/marketplace.MarketplaceService/CreatePaymentIntent',
    request,
    metadata || {},
    this.methodDescriptorCreatePaymentIntent);
  }

  methodDescriptorCreateCheckoutSession = new grpcWeb.MethodDescriptor(
    '/marketplace.MarketplaceService/CreateCheckoutSession',
    grpcWeb.MethodType.UNARY,
    marketplace_pb.CheckoutSessionRequest,
    marketplace_pb.CheckoutSessionReply,
    (request: marketplace_pb.CheckoutSessionRequest) => {
      return request.serializeBinary();
    },
    marketplace_pb.CheckoutSessionReply.deserializeBinary
  );

  createCheckoutSession(
    request: marketplace_pb.CheckoutSessionRequest,
    metadata?: grpcWeb.Metadata | null): Promise<marketplace_pb.CheckoutSessionReply>;

  createCheckoutSession(
    request: marketplace_pb.CheckoutSessionRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: marketplace_pb.CheckoutSessionReply) => void): grpcWeb.ClientReadableStream<marketplace_pb.CheckoutSessionReply>;

  createCheckoutSession(
    request: marketplace_pb.CheckoutSessionRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: marketplace_pb.CheckoutSessionReply) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/marketplace.MarketplaceService/CreateCheckoutSession',
        request,
        metadata || {},
        this.methodDescriptorCreateCheckoutSession,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/marketplace.MarketplaceService/CreateCheckoutSession',
    request,
    metadata || {},
    this.methodDescriptorCreateCheckoutSession);
  }

}

